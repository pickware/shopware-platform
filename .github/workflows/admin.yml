name: Admin checks and tests

on:
  pull_request:
  merge_group:
  workflow_dispatch:
  workflow_call:

env:
  PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'true'
  COMPOSER_ROOT_VERSION: 6.7.9999999-dev

jobs:
  lint:
    runs-on: ubuntu-24.04
    steps:
      - name: Setup Shopware
        uses: shopware/setup-shopware@main
        with:
          install-admin: true
          shopware-version: ${{ github.ref }}
          shopware-repository: ${{ github.repository }}

      - name: Cache ESLint and Stylelint
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            src/Administration/Resources/app/administration/node_modules/.eslintcache
            src/Administration/Resources/app/administration/node_modules/.stylelintcache
          key: admin-lint-${{ runner.os }}-6.6

      - name: Lint
        working-directory: src/Administration/Resources/app/administration
        run: npm run lint
      - name: Lint types
        working-directory: src/Administration/Resources/app/administration
        run: npm run lint:types
      - name: Lint scss
        working-directory: src/Administration/Resources/app/administration
        run: npm run lint:scss
      - name: Format
        working-directory: src/Administration/Resources/app/administration
        run: npm run format

  admin:
    runs-on: ubuntu-24.04
    name: "Jest Admin"
    strategy:
      matrix:
        test-type:
          - unit
    env:
      APP_ENV: prod
      DATABASE_URL: mysql://root:root@database:3306/root
      APP_URL: http://localhost:8000
      APP_SECRET: def00000bb5acb32b54ff8ee130270586eec0e878f7337dc7a837acc31d3ff00f93a56b595448b4b29664847dd51991b3314ff65aeeeb761a133b0ec0e070433bff08e48
      OPENSEARCH_URL: elasticsearch:9200
      ADMIN_OPENSEARCH_URL: elasticsearch:9200
      BLUE_GREEN_DEPLOYMENT: 1

    steps:
      - name: Setup Shopware
        uses: shopware/setup-shopware@main
        with:
          install-admin: true
          shopware-version: ${{ github.ref }}
          shopware-repository: ${{ github.repository }}
      - name: Run Jest Admin ${{ matrix.test-type }}
        run: npm --prefix src/Administration/Resources/app/administration run ${{ matrix.test-type }} -- --silent
      - name: Upload coverage
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # 5
        if: ${{ matrix.test-type == 'unit' }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: build/artifacts/jest/cobertura-coverage.xml
          flags: jest-admin

  license-check:
    runs-on: ubuntu-24.04
    name: "License check"
    env:
      WHITELISTED_JS_PACKAGES: 'abab@2.0.1;administration;taffydb@2.6.2'
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # 4
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # 4
        with:
          node-version: 20
      - name: install packages
        working-directory: src/Storefront/Resources/app/storefront
        run: |
          npm ci
      - name: Check license
        working-directory: src/Administration/Resources/app/administration
        run: |
          npx license-checker-rseidelsohn \
            --onlyAllow "$(tr \\n \; < ${{ github.workspace }}/.allowed-licenses)" \
            --excludePackages "${WHITELISTED_JS_PACKAGES}" \
            --excludePrivatePackages

  admin-check:
    if: always()
    needs:
    - lint
    - admin
    - license-check

    runs-on: Ubuntu-latest
    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe # v1.2.2
      with:
        # allowed-failures: docs, linters
        # allowed-skips: non-voting-flaky-job
        jobs: ${{ toJSON(needs) }}
